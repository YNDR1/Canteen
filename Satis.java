/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kantin;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yusuf
 */
public class Satis extends javax.swing.JFrame {

    Kantin k;
    double odenecekTutar = 0;
    /**
     * Creates new form Satis
     */
    DefaultTableModel dtm = new DefaultTableModel();
  //  double toplamFiyat = 0;

    public Satis() {
        initComponents();
    }

    public Satis(Kantin k) {
        initComponents();
        this.k = k;
        dtm.setColumnIdentifiers(new String[]{"Stok No", "Urun Adı", "Birim fiyat", "Adet", " Toplam Fiyat"});
        SatisTablo.setModel(dtm);
        listele();
        
       
    }

    public void listele() {
        if (dtm.getRowCount() > 0) {
            for (int i = dtm.getRowCount() - 1; i > -1; i--) {
                dtm.removeRow(i);
            }
        }
        for (int i = 0; i < k.AnlikSatis.size(); i++) {
            dtm.addRow(new String[]{String.valueOf(k.AnlikSatis.get(i).stokNumarasi), k.AnlikSatis.get(i).ad, String.valueOf(k.AnlikSatis.get(i).Satisfiyat), String.valueOf(k.AnlikSatis.get(i).adet), String.valueOf(k.AnlikSatis.get(i).adet * k.AnlikSatis.get(i).Satisfiyat)});
        }
        
        odenecekTutar = 0;
        for (int i = 0; i < k.AnlikSatis.size(); i++) {
            odenecekTutar += (k.AnlikSatis.get(i).Satisfiyat * k.AnlikSatis.get(i).adet);
           
        }
          LabeltoplamFiyat.setText((String.valueOf(odenecekTutar)));
           Labelparaustu.setText("");
           txtodenen.setText("Tutar Giriniz");
          //borkod textini seç!
         
    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        SatisTablo = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        LabeltoplamFiyat = new javax.swing.JLabel();
        Nakit = new javax.swing.JButton();
        Bakiye = new javax.swing.JButton();
        AnaMenu = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        UrunSil = new javax.swing.JButton();
        labelGörevli = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtBarkod = new javax.swing.JTextField();
        MiktarGir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtodenen = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Labelparaustu = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        label.setBackground(new java.awt.Color(51, 0, 102));
        label.setPreferredSize(new java.awt.Dimension(1000, 555));

        SatisTablo.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        SatisTablo.setForeground(new java.awt.Color(0, 51, 255));
        SatisTablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(SatisTablo);

        jLabel2.setFont(new java.awt.Font("Arial Narrow", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 255, 255));
        jLabel2.setText("Toplam Fiyat");

        LabeltoplamFiyat.setFont(new java.awt.Font("Arial Narrow", 1, 36)); // NOI18N
        LabeltoplamFiyat.setForeground(new java.awt.Color(102, 255, 255));

        Nakit.setBackground(new java.awt.Color(51, 0, 102));
        Nakit.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        Nakit.setForeground(new java.awt.Color(255, 255, 255));
        Nakit.setText("Nakit");
        Nakit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NakitActionPerformed(evt);
            }
        });

        Bakiye.setBackground(new java.awt.Color(51, 0, 102));
        Bakiye.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        Bakiye.setForeground(new java.awt.Color(255, 255, 255));
        Bakiye.setText("Bakiye");
        Bakiye.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BakiyeActionPerformed(evt);
            }
        });

        AnaMenu.setBackground(new java.awt.Color(51, 0, 204));
        AnaMenu.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        AnaMenu.setForeground(new java.awt.Color(255, 255, 255));
        AnaMenu.setText("Ana Menü");
        AnaMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnaMenuActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial Narrow", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Ödeme Şekli");

        UrunSil.setBackground(new java.awt.Color(51, 0, 102));
        UrunSil.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        UrunSil.setForeground(new java.awt.Color(255, 255, 255));
        UrunSil.setText("Ürün Sil");
        UrunSil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UrunSilActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial Narrow", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Barkod No:");

        txtBarkod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBarkodActionPerformed(evt);
            }
        });

        MiktarGir.setBackground(new java.awt.Color(51, 0, 102));
        MiktarGir.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        MiktarGir.setForeground(new java.awt.Color(255, 255, 255));
        MiktarGir.setText("Miktar Gir");
        MiktarGir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MiktarGirActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(51, 0, 102));
        jLabel1.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Copyright © Yusuf Nadir Uzun - Emre Yetkin 2020");

        jButton1.setBackground(new java.awt.Color(51, 0, 102));
        jButton1.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Ürün İade");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtodenen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtodenenMouseClicked(evt);
            }
        });
        txtodenen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtodenenActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 255, 255));
        jLabel5.setText("Para Üstü:");

        Labelparaustu.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Labelparaustu.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout labelLayout = new javax.swing.GroupLayout(label);
        label.setLayout(labelLayout);
        labelLayout.setHorizontalGroup(
            labelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(labelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(labelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(labelLayout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(labelGörevli, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(txtBarkod)
                        .addGap(83, 83, 83))
                    .addGroup(labelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(18, 18, 18)))
                .addGroup(labelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(UrunSil, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MiktarGir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AnaMenu, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                    .addComponent(txtodenen, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Labelparaustu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(33, 33, 33))
            .addGroup(labelLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabeltoplamFiyat, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(labelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(labelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addContainerGap())
                    .addGroup(labelLayout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addGroup(labelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(labelLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(labelLayout.createSequentialGroup()
                                .addComponent(Nakit, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Bakiye, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                .addGap(215, 215, 215))))))
        );
        labelLayout.setVerticalGroup(
            labelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, labelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(labelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelGörevli, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(labelLayout.createSequentialGroup()
                        .addComponent(txtBarkod, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(labelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(labelLayout.createSequentialGroup()
                        .addComponent(UrunSil, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(MiktarGir, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtodenen, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Labelparaustu, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(169, 169, 169))
                    .addGroup(labelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addGroup(labelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(labelLayout.createSequentialGroup()
                                .addGroup(labelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, labelLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(AnaMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(labelLayout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(3, 3, 3)
                                        .addGroup(labelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(Nakit, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Bakiye, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1))
                            .addGroup(labelLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(LabeltoplamFiyat, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(54, 54, 54))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AnaMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnaMenuActionPerformed
        if (k.AnlikSatis.size() == 0) {
            Menu m = new Menu(k);
            setVisible(false);
            m.setVisible(true);
            m.setLocationRelativeTo(null);
        } else {
               int a = JOptionPane.showConfirmDialog(null, " Sayfadan Çıkmak istediğinize emin misiniz ? Satış listesi temizlenecek " ,"Uyarı", JOptionPane.YES_NO_OPTION);
               if(a == 0){
            Menu m = new Menu(k);
            setVisible(false);
            m.setVisible(true);
            m.setLocationRelativeTo(null);
            k.AnlikSatis.removeAll(k.AnlikSatis);
               }
        }
    }//GEN-LAST:event_AnaMenuActionPerformed

    private void NakitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NakitActionPerformed
        if (k.nakitOde()) {
             System.out.println(k.AnlikSatis.size());
            listele();
           
           // LabeltoplamFiyat.setText("0");
        }
    }//GEN-LAST:event_NakitActionPerformed

    private void UrunSilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UrunSilActionPerformed
        try {
            int stokNo = Integer.parseInt((String) dtm.getValueAt(SatisTablo.getSelectedRow(), 0));
            for (int i = 0; i < k.AnlikSatis.size(); i++) {
                if (stokNo == k.AnlikSatis.get(i).stokNumarasi) {
             //       toplamFiyat -= (k.AnlikSatis.get(i).adet * k.AnlikSatis.get(i).Satisfiyat);
               //     LabeltoplamFiyat.setText(String.valueOf(toplamFiyat));
                    k.AnlikSatis.remove(k.AnlikSatis.get(i));
                   System.out.println(k.AnlikSatis.size());
                listele();
                   
                }
            }
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Listeden silmek istediğiniz ürünü seçiniz", "Uyarı", JOptionPane.WARNING_MESSAGE);
        }

        /*
        int no;
        boolean sonuc = false;
        try {
            int stokNo = Integer.parseInt((String) dtm.getValueAt(SatisTablo.getSelectedRow(), 0));
            System.out.println("stok no = " + stokNo);
            if (k.SatisListesindenSil(stokNo)) {
                stokNo = Integer.parseInt((String) dtm.getValueAt(SatisTablo.getSelectedRow(), 0));
                System.out.println("for öncesi");
                for (int i = 0; i <= k.AnlikSatis.size(); i++) {
                    System.out.println("anlik satista stok no = " + k.AnlikSatis.get(i).stokNumarasi + "dtm de stok no = " + stokNo);
                    if (k.AnlikSatis.get(i).stokNumarasi == stokNo) {
                        System.out.println("ilk ife girdi yani tek ürüne");
                        dtm.removeRow(SatisTablo.getSelectedRow());
                        toplamFiyat -= k.AnlikSatis.get(i).Satisfiyat;
                        LabeltoplamFiyat.setText(String.valueOf(toplamFiyat));
                        SatisTablo.setModel(dtm);
                        k.AnlikSatis.remove(k.AnlikSatis.get(i));
                        sonuc = true;
                        break;
                    }
                }
            } else {
                System.out.println("elseye yani birden fazla ürüne girdi");
                
                    stokNo = Integer.parseInt((String) dtm.getValueAt(SatisTablo.getSelectedRow(), 0));
                    for (int j = 0; j < k.AnlikSatis.size(); j++) {
                        System.out.println("anlik satista stok no = " + k.AnlikSatis.get(j).stokNumarasi + "anlik satista adet =" + k.AnlikSatis.get(j).adet);
                        if (stokNo == k.AnlikSatis.get(j).stokNumarasi) {
                            System.out.println("elsenin ilk ifine girdi");
                            System.out.println("Silinen malın stok nosu basmadan önce" + k.AnlikSatis.get(j).stokNumarasi);
                            System.out.println(" silinenin adedini basmadan hemen önce = " + k.AnlikSatis.get(j).adet);
                            dtm.setValueAt(k.AnlikSatis.get(j).adet, SatisTablo.getSelectedRow(), 3);
                            dtm.setValueAt(k.AnlikSatis.get(j).adet * k.AnlikSatis.get(j).Satisfiyat, SatisTablo.getSelectedRow(), 4);
                            System.out.println("Silinen urunun satis fiyatı = " + k.AnlikSatis.get(j).Satisfiyat);
                            toplamFiyat -= k.AnlikSatis.get(j).Satisfiyat;
                            LabeltoplamFiyat.setText(String.valueOf(toplamFiyat));
                            SatisTablo.setModel(dtm);
                            break;
                        }
                    }

                 
                
            }
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Listeden urun seçiniz", "uyarı", JOptionPane.WARNING_MESSAGE);
        }
         */
    }//GEN-LAST:event_UrunSilActionPerformed

    private void txtBarkodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBarkodActionPerformed
        int no;
        //double fiyat ;

        if (k.satisIcinUrunEkle(txtBarkod.getText())) {
            for (int c = 0; c < dtm.getRowCount(); c++) {
                no = Integer.parseInt((String) dtm.getValueAt(c, 0));

                System.out.println(no);
                for (int j = 0; j < k.AnlikSatis.size(); j++) {
                    if (no == k.AnlikSatis.get(j).stokNumarasi && txtBarkod.getText().equals(k.AnlikSatis.get(j).barkod)) {
                        //fiyat = Double.parseDouble((String) dtm.getValueAt(c, 4));
                     
                        System.out.println("Urunun satış fiyatı ürün varken  = " + k.AnlikSatis.get(j).Satisfiyat);
                      //  toplamFiyat += k.AnlikSatis.get(j).Satisfiyat;
                        txtBarkod.setText("");
                    //    LabeltoplamFiyat.setText(String.valueOf(toplamFiyat));
                        break;
                    }

                }

            }
        } else {
            int sayac = 0;
            for (int i = 0; i < k.urunler.size(); i++) {
                if (k.urunler.get(i).barkod.equals(txtBarkod.getText())) {
                   
                    txtBarkod.setText("");
                    System.out.println("Urunun satış fiyatı = " + k.urunler.get(i).Satisfiyat);
             //       toplamFiyat += (k.urunler.get(i).Satisfiyat);
              //      LabeltoplamFiyat.setText(String.valueOf(toplamFiyat));
              sayac++;
                    break;
                }
                
            }
           if(sayac==0){
                JOptionPane.showMessageDialog(null, "Ürün bulunamadı.", "uyarı", JOptionPane.WARNING_MESSAGE);
                txtBarkod.setText("");
           }
        }
        listele();
    
        /*
        int no;
        double satis;
        boolean varmı = true;
        k.satisIcinUrunEkle(txtBarkod.getText());
        for (int i = 0; i < k.urunler.size(); i++) {
            if (txtBarkod.getText().equals(k.urunler.get(i).barkod)) {
                for (int e = 0; e < k.AnlikSatis.size(); e++) {
                    if (k.AnlikSatis.get(e).stokNumarasi == k.urunler.get(i).stokNumarasi) {
                        varmı = false;
                        k.AnlikSatis.get(e).adet++;
                        satis = k.AnlikSatis.get(e).Satisfiyat * 2;
                        for (int c = 0; c > dtm.getRowCount(); c++) {
                            no = Integer.parseInt((String) dtm.getValueAt(c, 0));
                            if (no == k.AnlikSatis.get(e).stokNumarasi) {
                                dtm.setValueAt(k.AnlikSatis.get(i).adet, c, 3);
                                dtm.setValueAt(satis, c, 4);
                                toplamFiyat += k.AnlikSatis.get(e).Satisfiyat;
                                LabeltoplamFiyat.setText(String.valueOf(toplamFiyat));
                            }
                        }
                    }
                    if (varmı) {
                      
                        dtm.addRow(new String[]{String.valueOf(k.urunler.get(i).stokNumarasi), k.urunler.get(i).ad, String.valueOf(k.urunler.get(i).Satisfiyat)});
                        txtBarkod.setText("");
                        toplamFiyat += (k.urunler.get(i).Satisfiyat);
                        LabeltoplamFiyat.setText(String.valueOf(toplamFiyat));
                    }

                }

            }

        }
         */

    }//GEN-LAST:event_txtBarkodActionPerformed

    private void BakiyeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BakiyeActionPerformed
        SatisBakiye s = new SatisBakiye(k);
        setVisible(false);
        s.setVisible(true);
        s.setLocationRelativeTo(null);
    }//GEN-LAST:event_BakiyeActionPerformed

    private void MiktarGirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MiktarGirActionPerformed
     try {
            int stokNo = Integer.parseInt((String) dtm.getValueAt(SatisTablo.getSelectedRow(), 0));
           
            String deger = JOptionPane.showInputDialog(null, " Miktar Giriniz", "Miktar", JOptionPane.INFORMATION_MESSAGE);
            if(deger!=null&&Integer.parseInt(deger)>0){
            k.miktarGir(stokNo, Integer.parseInt(deger));
                          listele();
                          
                        //  LabeltoplamFiyat.setText((String.valueOf(odenecekTutar)));
            }
            else{
             JOptionPane.showMessageDialog(null, "Pozitif değer giriniz, işlem gerçekleşmedi", "Uyarı", JOptionPane.WARNING_MESSAGE);
        }
      }catch(ArrayIndexOutOfBoundsException e){
          JOptionPane.showMessageDialog(null, "Girdiğiniz bilgileri kontrol ediniz", " Uyarı", JOptionPane.WARNING_MESSAGE);
      }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Girdiğiniz degerleri kontrol ediniz.", "uyarı", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_MiktarGirActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(k.urunİade()){
            listele();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtodenenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtodenenActionPerformed
      try{
        Double paraustu = Double.parseDouble(txtodenen.getText())- odenecekTutar;
       Labelparaustu.setText((String.valueOf(paraustu)));
      }catch(NumberFormatException e){
        JOptionPane.showMessageDialog(null, "Girdiğiniz bilgileri kontrol ediniz", " Uyarı", JOptionPane.WARNING_MESSAGE);  
      }
    }//GEN-LAST:event_txtodenenActionPerformed

    private void txtodenenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtodenenMouseClicked
        txtodenen.selectAll();
    }//GEN-LAST:event_txtodenenMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Satis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Satis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Satis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Satis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Satis().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AnaMenu;
    private javax.swing.JButton Bakiye;
    private javax.swing.JLabel Labelparaustu;
    private javax.swing.JLabel LabeltoplamFiyat;
    private javax.swing.JButton MiktarGir;
    private javax.swing.JButton Nakit;
    private javax.swing.JTable SatisTablo;
    private javax.swing.JButton UrunSil;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel label;
    private javax.swing.JLabel labelGörevli;
    private javax.swing.JTextField txtBarkod;
    private javax.swing.JTextField txtodenen;
    // End of variables declaration//GEN-END:variables
}
